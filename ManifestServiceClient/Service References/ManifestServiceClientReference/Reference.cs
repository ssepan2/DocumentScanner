//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManifestServiceClient.ManifestServiceClientReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ManifestServiceClientReference.IPackageManifestService")]
    public interface IPackageManifestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPackageManifestService/Ping", ReplyAction="http://tempuri.org/IPackageManifestService/PingResponse")]
        bool Ping(ref string errorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPackageManifestService/ManifestsConfirmed", ReplyAction="http://tempuri.org/IPackageManifestService/ManifestsConfirmedResponse")]
        bool ManifestsConfirmed(ref DocumentScannerServiceCommon.ManifestContract contract, ref string errorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPackageManifestService/DocumentsConfirmed", ReplyAction="http://tempuri.org/IPackageManifestService/DocumentsConfirmedResponse")]
        bool DocumentsConfirmed(ref DocumentScannerServiceCommon.DocumentContract contract, ref string errorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPackageManifestService/ManifestsAvailable", ReplyAction="http://tempuri.org/IPackageManifestService/ManifestsAvailableResponse")]
        bool ManifestsAvailable(ref DocumentScannerServiceCommon.ManifestContract contract, ref string errorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPackageManifestService/DocumentsAvailable", ReplyAction="http://tempuri.org/IPackageManifestService/DocumentsAvailableResponse")]
        bool DocumentsAvailable(ref DocumentScannerServiceCommon.DocumentContract contract, ref string errorMessage);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPackageManifestServiceChannel : ManifestServiceClient.ManifestServiceClientReference.IPackageManifestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PackageManifestServiceClient : System.ServiceModel.ClientBase<ManifestServiceClient.ManifestServiceClientReference.IPackageManifestService>, ManifestServiceClient.ManifestServiceClientReference.IPackageManifestService {
        
        public PackageManifestServiceClient() {
        }
        
        public PackageManifestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PackageManifestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PackageManifestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PackageManifestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Ping(ref string errorMessage) {
            return base.Channel.Ping(ref errorMessage);
        }
        
        public bool ManifestsConfirmed(ref DocumentScannerServiceCommon.ManifestContract contract, ref string errorMessage) {
            return base.Channel.ManifestsConfirmed(ref contract, ref errorMessage);
        }
        
        public bool DocumentsConfirmed(ref DocumentScannerServiceCommon.DocumentContract contract, ref string errorMessage) {
            return base.Channel.DocumentsConfirmed(ref contract, ref errorMessage);
        }
        
        public bool ManifestsAvailable(ref DocumentScannerServiceCommon.ManifestContract contract, ref string errorMessage) {
            return base.Channel.ManifestsAvailable(ref contract, ref errorMessage);
        }
        
        public bool DocumentsAvailable(ref DocumentScannerServiceCommon.DocumentContract contract, ref string errorMessage) {
            return base.Channel.DocumentsAvailable(ref contract, ref errorMessage);
        }
    }
}
